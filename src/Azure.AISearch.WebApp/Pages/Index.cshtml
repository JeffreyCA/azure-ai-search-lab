@page
@model IndexModel
@{
    ViewData["Title"] = "Search";
}
@section Scripts {
    <script>
        const { createApp, ref, watch } = Vue
        createApp({
            setup() {
                const scenarios = ref(@Html.Raw(JsonSerializer.Serialize(Model.Scenarios, JsonConfiguration.DefaultJsonOptions)))
                const selectedScenario = ref(null)
                const searchRequest = ref(@Html.Raw(JsonSerializer.Serialize(Model.SearchRequest, JsonConfiguration.DefaultJsonOptions)))

                watch(selectedScenario, (newScenario) => {
                    if (newScenario) {
                        searchRequest.value = newScenario.searchRequest;
                    }
                })

                return {
                    scenarios, selectedScenario, searchRequest
                }
            }
        }).mount('#app')
    </script>
}
<h2 class="display-6 mb-3">Search</h2>

<form method="post" class="mb-3">

    <div class="card mb-3">
        <div class="card-header">Options</div>
        <div class="card-body">
            <div class="mb-2">
                <label class="form-label">Predefined scenario</label>
                <div class="form-group">
                    <select class="form-select" v-model="selectedScenario">
                        <option v-bind:value="null">None</option>
                        <option v-for="scenario in scenarios" v-bind:value="scenario">{{ scenario.name }}</option>
                    </select>
                </div>
            </div>

            <div class="mb-2">
                <label class="form-label">Primary service</label>
                <div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.PrimaryService)" id="searchRequest-PrimaryService-AzureCognitiveSearch" value="@PrimaryServiceType.AzureCognitiveSearch" v-model="searchRequest.primaryService">
                        <label class="form-check-label" for="searchRequest-PrimaryService-AzureCognitiveSearch">Azure Cognitive Search</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.PrimaryService)" id="searchRequest-PrimaryService-AzureOpenAI" value="@PrimaryServiceType.AzureOpenAI" v-model="searchRequest.primaryService">
                        <label class="form-check-label" for="searchRequest-PrimaryService-AzureOpenAI">Azure OpenAI</label>
                    </div>
                </div>
            </div>

            <div class="mb-2" v-if="searchRequest.primaryService == '@PrimaryServiceType.AzureOpenAI'">
                <label class="form-label" for="searchRequest-SystemRoleInformation">System role information</label>
                <input type="text" class="form-control" name="@nameof(SearchRequest.SystemRoleInformation)" id="searchRequest-SystemRoleInformation" v-model="searchRequest.systemRoleInformation">
            </div>
            
            <div class="mb-2" v-if="searchRequest.primaryService == '@PrimaryServiceType.AzureOpenAI'">
                <label class="form-label">Data source (Azure OpenAI &quot;on your data&quot;)</label>
                <div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.DataSource)" id="searchRequest-DataSource-None" value="@DataSourceType.None" v-model="searchRequest.dataSource">
                        <label class="form-check-label" for="searchRequest-DataSource-None">None</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.DataSource)" id="searchRequest-DataSource-AzureCognitiveSearch" value="@DataSourceType.AzureCognitiveSearch" v-model="searchRequest.dataSource">
                        <label class="form-check-label" for="searchRequest-DataSource-AzureCognitiveSearch">Azure Cognitive Search</label>
                    </div>
                    <div class="form-check form-check-inline form-switch">
                        <input class="form-check-input" type="checkbox" role="switch" name="@nameof(SearchRequest.LimitToDataSource)" id="searchRequest-LimitToDataSource" value="true" v-model="searchRequest.limitToDataSource" v-bind:disabled="searchRequest.dataSource == '@DataSourceType.None'">
                        <input type="hidden" name="@nameof(SearchRequest.LimitToDataSource)" value="false" />
                        <label class="form-check-label" for="searchRequest-LimitToDataSource">Limit to your data</label>
                    </div>
                </div>
            </div>

            <div class="mb-2" v-if="!(searchRequest.primaryService == '@PrimaryServiceType.AzureOpenAI' && searchRequest.dataSource == '@DataSourceType.None')">
                <label class="form-label">Search index</label>
                <div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.SearchIndexName)" id="searchRequest-SearchIndexName-BlobDocuments" value="@Constants.IndexNames.BlobDocuments" v-model="searchRequest.searchIndexName">
                        <label class="form-check-label" for="searchRequest-SearchIndexName-BlobDocuments">Documents</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.SearchIndexName)" id="searchRequest-SearchIndexName-BlobChunks" value="@Constants.IndexNames.BlobChunks" v-model="searchRequest.searchIndexName">
                        <label class="form-check-label" for="searchRequest-SearchIndexName-BlobChunks">Chunks</label>
                    </div>
                </div>
            </div>

            <div class="mb-2" v-if="!(searchRequest.primaryService == '@PrimaryServiceType.AzureOpenAI' && searchRequest.dataSource == '@DataSourceType.None')">
                <label class="form-label">Query type</label>
                <div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.QueryType)" id="searchRequest-QueryType-TextStandard" value="@QueryType.TextStandard" v-model="searchRequest.queryType">
                        <label class="form-check-label" for="searchRequest-QueryType-TextStandard">Standard text</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.QueryType)" id="searchRequest-QueryType-TextSemantic" value="@QueryType.TextSemantic" v-model="searchRequest.queryType">
                        <label class="form-check-label" for="searchRequest-QueryType-TextSemantic">Semantic text</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.QueryType)" id="searchRequest-QueryType-Vector" value="@QueryType.Vector" v-model="searchRequest.queryType" v-bind:disabled="searchRequest.searchIndexName == '@Constants.IndexNames.BlobDocuments'">
                        <label class="form-check-label" for="searchRequest-QueryType-Vector">Vector only</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.QueryType)" id="searchRequest-QueryType-HybridStandard" value="@QueryType.HybridStandard" v-model="searchRequest.queryType" v-bind:disabled="searchRequest.searchIndexName == '@Constants.IndexNames.BlobDocuments'">
                        <label class="form-check-label" for="searchRequest-QueryType-HybridStandard">Standard hybrid (text + vector)</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="@nameof(SearchRequest.QueryType)" id="searchRequest-QueryType-HybridSemantic" value="@QueryType.HybridSemantic" v-model="searchRequest.queryType" v-bind:disabled="searchRequest.searchIndexName == '@Constants.IndexNames.BlobDocuments'">
                        <label class="form-check-label" for="searchRequest-QueryType-HybridSemantic">Semantic hybrid (text + vector)</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.SearchResponse?.History != null && Model.SearchResponse.History.Any())
    {
        <div class="message-list mb-4">
            @foreach (var item in Model.SearchResponse.History)
            {
                var cssClass = Model.SearchResponse.History.IndexOf(item) % 2 == 0 ? "border-primary-subtle float-end text-end" : "border-info float-start";

                <input type="hidden" name="history[]" value="@item" />
                <div class="message-list-item mt-3 p-2 w-75 border rounded search-answer @cssClass">@Html.Raw(item)</div>
                <div class="clearfix"></div>
            }
        </div>
    }
    else
    {
        if (!string.IsNullOrWhiteSpace(Model.SearchRequest.Query))
        {
            <h3 class="mb-3">Search results for <code>@Model.SearchRequest.Query</code></h3>
        }
    }

    <div class="input-group">
        <input type="text" class="form-control border-primary" placeholder="Search or ask anything" name="@nameof(SearchRequest.Query)" />
        <button class="btn btn-outline-primary" type="submit"><i class="bi bi-send"></i> Send</button>
    </div>
</form>

<partial name="_SearchResponse" model="Model.SearchResponse" />